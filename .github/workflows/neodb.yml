name: Sync NeoDB Data

permissions:
  contents: write

on:
  schedule:
    - cron: "0 17 * * *"          # 每天 UTC 17:00 执行
  workflow_dispatch:

jobs:
  neodb_sync:
    name: Sync NeoDB Data for All Types
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install jq if missing
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Ensure local files exist
        run: |
          categories=("book" "movie" "tv" "game")
          types=("complete" "progress" "wishlist")
          mkdir -p neodb
          for category in "${categories[@]}"; do
            for type in "${types[@]}"; do
              local_file="neodb/${category}_${type}.json"
              if [ ! -f "$local_file" ]; then
                echo "Creating default JSON: $local_file"
                echo '{"data": [], "pages": 0, "count": 0}' > "$local_file"
              fi
            done
          done

      - name: Sync all category/type combinations
        run: |
          categories=("book" "movie" "tv" "game")
          types=("complete" "progress" "wishlist")
          UPDATED=0

          for category in "${categories[@]}"; do
            for type in "${types[@]}"; do
              echo "Syncing ${category}_${type}..."

              # 下载第一页，获取总页数/总数
              curl -s \
                "https://neodb.social/api/me/shelf/${type}?category=${category}&page=1" \
                -H "accept: application/json" \
                -H "Authorization: Bearer ${{ secrets.NEODB_ACCESS_TOKEN }}" \
                -o "tmp_${category}_${type}_1.json"

              remote_count=$(jq '.count // 0' "tmp_${category}_${type}_1.json")
              pages=$(jq '.pages // 0' "tmp_${category}_${type}_1.json")

              local_file="neodb/${category}_${type}.json"
              local_count=$(jq '.count // 0' "$local_file")

              if [ "$remote_count" -eq "$local_count" ]; then
                echo "No update for ${category}_${type}"
                rm -f "tmp_${category}_${type}_1.json"
                continue
              fi

              UPDATED=1
              outdir="tmp/${category}_${type}"
              mkdir -p "$outdir"

              # 下载所有分页
              for ((i=1; i<=pages; i++)); do
                echo "Downloading page $i of ${category}_${type}"
                curl -s \
                  "https://neodb.social/api/me/shelf/${type}?category=${category}&page=$i" \
                  -H "accept: application/json" \
                  -H "Authorization: Bearer ${{ secrets.NEODB_ACCESS_TOKEN }}" \
                  -o "$outdir/${i}.json"
              done

              # 合并
              jq -c -s '{
                data: map(.data[]) | unique | sort_by(.created_time) | reverse,
                pages: (map(.pages)[0]),
                count: (map(.count)[0])
              }' "$outdir"/*.json > "neodb/${category}_${type}.json"

              # 清理临时文件
              rm -rf "tmp_${category}_${type}_1.json" "$outdir"
            done
          done

          if [ "$UPDATED" -eq 0 ]; then
            echo "No updates. Exiting."
            exit 0
          fi

      - name: Commit and Push
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: update NeoDB shelf data (all types)'
          add: './neodb'
